// @ts-nocheck
// eslint-disable
/**
 * ---------------------------------------------------
 * ðŸš—ðŸš¦ Generated by nuxt-typed-router. Do not modify !
 * ---------------------------------------------------
 * */

import type { NuxtLinkProps } from '#app';
import type { DefineComponent } from 'vue';
import type { RouteLocationRaw, RouteLocationPathRaw } from 'vue-router';
import type {
  RoutesNamesList,
  RoutesNamedLocations,
  RoutesNamesListRecord
} from './__routes';
import type { TypedRouter, TypedRoute } from './__router';
import { useRoute as _useRoute } from './__useTypedRoute';
import { useRouter as _useRouter } from './__useTypedRouter';
import { navigateTo as _navigateTo } from './__navigateTo';
import {
  useLocalePath as _useLocalePath,
  useLocaleRoute as _useLocaleRoute
} from './__i18n-router';

declare global {
  const useRoute: typeof _useRoute;
  const useRouter: typeof _useRouter;
  const navigateTo: typeof _navigateTo;

  const useLocalePath: typeof _useLocalePath;
  const useLocaleRoute: typeof _useLocaleRoute;
}

type TypedNuxtLinkProps = Omit<NuxtLinkProps, 'to'> & {
  to:
    | (Omit<Exclude<RouteLocationRaw, string>, 'name' | 'params'> &
        RoutesNamedLocations)
    | string
    | RouteLocationPathRaw;
};

export type TypedNuxtLink = DefineComponent<
  TypedNuxtLinkProps,
  {},
  {},
  import('vue').ComputedOptions,
  import('vue').MethodOptions,
  import('vue').ComponentOptionsMixin,
  import('vue').ComponentOptionsMixin,
  {},
  string,
  import('vue').VNodeProps &
    import('vue').AllowedComponentProps &
    import('vue').ComponentCustomProps,
  Readonly<TypedNuxtLinkProps>,
  {}
>;

declare module 'vue' {
  interface GlobalComponents {
    NuxtLink: TypedNuxtLink;
  }
}
