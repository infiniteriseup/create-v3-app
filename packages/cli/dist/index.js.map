{"version":3,"sources":["../src/createProject.ts","../src/constants.ts","../src/gui.ts","../src/git.ts","../src/installDependencies.ts","../src/utils.ts","../src/logNextSteps.ts","../src/userOptions.ts","../src/index.ts"],"sourcesContent":["import { resolve } from 'path';\nimport fs from 'fs-extra';\nimport ora, { Ora } from 'ora';\nimport inquirer from 'inquirer';\nimport { PKG_ROOT } from './constants.js';\nimport { info, success, warn } from './gui.js';\n\nexport type CreateProjectOptions = {\n  projectName?: string;\n  projectDir: string;\n};\n\nconst cleanupProjectDir = async (\n  { projectName, projectDir }: CreateProjectOptions,\n  spinner: Ora\n) => {\n  if (!fs.existsSync(projectDir)) return;\n\n  console.log(projectDir);\n  const isEmpty = fs.readdirSync(projectDir).length === 0;\n  const isCwd = projectName === '.';\n\n  if (isEmpty && !isCwd) {\n    spinner.info(`${info(projectName)} exists but is empty, continuing...\\n`);\n    return;\n  }\n\n  spinner.stopAndPersist();\n\n  const { shouldAbort } = await inquirer.prompt<{\n    shouldAbort: boolean;\n  }>({\n    name: 'shouldAbort',\n    type: 'list',\n    message: `${warn('Warning:')} ${warn(\n      projectName\n    )} already exists and isn't empty. How would you like to proceed?`,\n    choices: [\n      {\n        name: 'Abort installation (recommended)',\n        value: true,\n        short: 'Abort'\n      },\n      {\n        name: 'Clear the directory and continue installation',\n        value: false,\n        short: 'Clear'\n      }\n    ],\n    default: true\n  });\n\n  if (shouldAbort) {\n    spinner.fail('Aborting installation...');\n    process.exit(1);\n  }\n\n  spinner.info(`Emptying ${info(projectName)} and creating t3 app..\\n`);\n  fs.emptyDirSync(projectDir);\n};\n\nconst renameDotFiles = (projectDir: string) => {\n  const files = fs.readdirSync(projectDir);\n  files.forEach(file => {\n    if (!file.startsWith('_')) return;\n    fs.renameSync(\n      resolve(projectDir, file),\n      resolve(projectDir, `.${file.slice(1)}`)\n    );\n  });\n};\n\nexport const createProject = async ({\n  projectName,\n  projectDir\n}: CreateProjectOptions) => {\n  const spinner = ora(`Creating project in: ${projectDir}...\\n`).start();\n\n  await cleanupProjectDir({ projectName, projectDir }, spinner);\n\n  spinner.start();\n\n  const srcDir = resolve(PKG_ROOT, 'template');\n  fs.copySync(srcDir, projectDir);\n  renameDotFiles(projectDir);\n\n  const scaffoldedName = projectName === '.' ? 'App' : info(projectName);\n\n  spinner.succeed(`${scaffoldedName} ${success('scaffolded successfully!')}\\n`);\n};\n","import path from 'path';\nimport { fileURLToPath } from 'url';\nimport figlet from 'figlet';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst distPath = path.dirname(__filename);\n\nexport const PKG_ROOT = path.join(distPath, '../');\n\nexport const TITLE_TEXT = figlet.textSync('Create V3 App', {\n  font: 'Epic'\n});\nexport const DEFAULT_APP_NAME = 'my-v3-app';\nexport const CREATE_V3_APP = 'create-v3-app';\n","import chalk from 'chalk';\nimport gradientString from 'gradient-string';\nimport { TITLE_TEXT } from './constants.js';\n\nexport const renderTitle = () => {\n  const gradient = gradientString(\n    Object.values([\n      '#2ef232',\n      '#00e96b',\n      '#00dd96',\n      '#00d0b8',\n      '#00c1d2',\n      '#00b1e0',\n      '#00a0e3',\n      '#008ddb',\n      '#007bc9'\n    ])\n  );\n\n  console.log(gradient.multiline(TITLE_TEXT));\n};\n\nexport const error = (...args: unknown[]) => {\n  return chalk.red(...args);\n};\nexport const warn = (...args: unknown[]) => {\n  return chalk.yellow(...args);\n};\nexport const info = (...args: unknown[]) => {\n  return chalk.cyan(...args);\n};\nexport const success = (...args: unknown[]) => {\n  return chalk.green(...args);\n};\n\nexport const logger = {\n  error(...args: unknown[]) {\n    console.log(error(...args));\n  },\n  warn(...args: unknown[]) {\n    console.log(warn(...args));\n  },\n  info(...args: unknown[]) {\n    console.log(info(...args));\n  },\n  success(...args: unknown[]) {\n    console.log(success(...args));\n  }\n};\n","import chalk from 'chalk';\nimport { execSync } from 'child_process';\nimport { execa } from 'execa';\nimport fs from 'fs-extra';\nimport inquirer from 'inquirer';\nimport ora, { type Ora } from 'ora';\nimport path from 'path';\nimport { error, logger, success } from './gui.js';\n\nconst isGitInstalled = (dir: string): boolean => {\n  try {\n    execSync('git --version', { cwd: dir });\n    return true;\n  } catch (_e) {\n    return false;\n  }\n};\n\nconst isRootGitRepo = (dir: string): boolean => {\n  return fs.existsSync(path.join(dir, '.git'));\n};\n\nconst isInsideGitRepo = async (dir: string): Promise<boolean> => {\n  try {\n    await execa('git', ['rev-parse', '--is-inside-work-tree'], {\n      cwd: dir,\n      stdout: 'ignore'\n    });\n    return true;\n  } catch {\n    return false;\n  }\n};\n\nconst getGitVersion = () => {\n  const stdout = execSync('git --version').toString().trim();\n  const gitVersionTag = stdout.split(' ')[2];\n  const [major, minor] = gitVersionTag?.split('.') || [0, 0];\n\n  return { major: Number(major), minor: Number(minor) };\n};\n\nconst getDefaultBranch = () => {\n  const stdout = execSync('git config --global init.defaultBranch || echo main')\n    .toString()\n    .trim();\n\n  return stdout;\n};\n\nconst checkExistingRepo = async (\n  projectDir: string,\n  spinner: Ora\n): Promise<boolean> => {\n  const isRoot = isRootGitRepo(projectDir);\n  if (!isRoot) return false;\n\n  const isInside = await isInsideGitRepo(projectDir);\n  const dirName = path.parse(projectDir).name; // skip full path for logging\n\n  if (isInside) {\n    spinner.stop();\n    const { overwriteGit } = await inquirer.prompt<{\n      overwriteGit: boolean;\n    }>({\n      name: 'overwriteGit',\n      type: 'confirm',\n      message: `${error(\n        'Warning:'\n      )} Git is already initialized in \"${dirName}\". Initializing a new git repository would delete the previous history. Would you like to continue anyways?`,\n      default: false\n    });\n    if (overwriteGit) {\n      fs.removeSync(path.join(projectDir, '.git'));\n    }\n\n    return !overwriteGit;\n  } else {\n    spinner.stop();\n    const { initializeChildGitRepo } = await inquirer.prompt<{\n      initializeChildGitRepo: boolean;\n    }>({\n      name: 'initializeChildGitRepo',\n      type: 'confirm',\n      message: `${error(\n        'Warning:'\n      )} \"${dirName}\" is already in a git worktree. Would you still like to initialize a new git repository in this directory?`,\n      default: false\n    });\n\n    return !initializeChildGitRepo;\n  }\n};\n\nexport const initializeGit = async (projectDir: string) => {\n  logger.info('Initializing Git...');\n\n  if (!isGitInstalled(projectDir)) {\n    logger.warn('Git is not installed. Skipping Git initialization.');\n    return;\n  }\n\n  const spinner = ora('Creating a new git repo...\\n').start();\n\n  const shouldAbort = await checkExistingRepo(projectDir, spinner);\n  if (shouldAbort) {\n    spinner.info('Skipping git initialization...');\n    return;\n  }\n\n  try {\n    const branchName = getDefaultBranch();\n\n    const { major, minor } = getGitVersion();\n    if (major < 2 || minor < 28) {\n      await execa('git', ['init'], { cwd: projectDir });\n      await execa('git', ['branch', '-m', branchName], { cwd: projectDir });\n    } else {\n      await execa('git', ['init', `--initial-branch=${branchName}`], {\n        cwd: projectDir\n      });\n    }\n    await execa('git', ['add', '.'], { cwd: projectDir });\n    spinner.succeed(\n      `${success('Successfully initialized and staged')} ${chalk.green.bold(\n        'git'\n      )}\\n`\n    );\n  } catch (err) {\n    spinner.fail(\n      `${error(\n        'Failed:'\n      )} could not initialize git. Update git to the latest version!\\n`\n    );\n  }\n};\n","import chalk from 'chalk';\nimport { execa } from 'execa';\nimport ora, { type Ora } from 'ora';\nimport { logger } from './gui.js';\nimport { PackageManager, getUserPkgManager } from './utils.js';\n\ntype InstallFunction = (projectDir: string) => Promise<Ora>;\n\nconst installWithNpm: InstallFunction = async projectDir => {\n  await execa('npm', ['install'], {\n    cwd: projectDir,\n    stderr: 'inherit'\n  });\n\n  return ora();\n};\n\nconst installWithYarn: InstallFunction = async projectDir => {\n  const spinner = ora('Running yarn...').start();\n  const yarnSubprocess = execa('yarn', [], {\n    cwd: projectDir,\n    stdout: 'pipe'\n  });\n\n  await new Promise<void>((res, rej) => {\n    yarnSubprocess.stdout?.on('data', (data: Buffer) => {\n      spinner.text = data.toString();\n    });\n    yarnSubprocess.on('error', e => rej(e));\n    yarnSubprocess.on('close', () => res());\n  });\n\n  return spinner;\n};\n\nconst installWithPnpm: InstallFunction = async projectDir => {\n  const spinner = ora('Running pnpm install...').start();\n  const pnpmSubprocess = execa('pnpm', ['install'], {\n    cwd: projectDir,\n    stdout: 'pipe'\n  });\n\n  await new Promise<void>((res, rej) => {\n    pnpmSubprocess.stdout?.on('data', (data: Buffer) => {\n      const text = data.toString();\n\n      if (text.includes('Progress')) {\n        spinner.text = text.includes('|') ? text.split(' | ')[1] ?? '' : text;\n      }\n    });\n    pnpmSubprocess.on('error', e => rej(e));\n    pnpmSubprocess.on('close', () => res());\n  });\n\n  return spinner;\n};\n\nconst runInstallCommand = async (\n  pkgManager: PackageManager,\n  projectDir: string\n): Promise<Ora> => {\n  switch (pkgManager) {\n    case 'npm':\n      return installWithNpm(projectDir);\n    case 'pnpm':\n      return installWithPnpm(projectDir);\n    case 'yarn':\n      return installWithYarn(projectDir);\n  }\n};\n\nexport const installDependencies = async (projectDir: string) => {\n  logger.info('Installing dependencies...');\n  const pkgManager = getUserPkgManager();\n\n  const installSpinner = await runInstallCommand(pkgManager, projectDir);\n\n  installSpinner.succeed(chalk.green('Successfully installed dependencies!\\n'));\n};\n","import { resolve, basename } from 'path';\n\nexport type PackageManager = 'npm' | 'pnpm' | 'yarn';\n\nexport const getUserPkgManager: () => PackageManager = () => {\n  const userAgent = process.env.npm_config_user_agent;\n\n  if (userAgent?.startsWith('yarn')) return 'yarn';\n  if (userAgent?.startsWith('pnpm')) return 'pnpm';\n  return 'npm';\n};\n\nconst validationRegExp =\n  /^(?:@[a-z0-9-*~][a-z0-9-*._~]*\\/)?[a-z0-9-~][a-z0-9-._~]*$/;\n\nexport const validateAppName = (input: string) => {\n  const paths = input.split('/');\n\n  const indexOfDelimiter = paths.findIndex(p => p.startsWith('@'));\n\n  let appName = paths[paths.length - 1];\n  if (paths.findIndex(p => p.startsWith('@')) !== -1) {\n    appName = paths.slice(indexOfDelimiter).join('/');\n  }\n\n  if (input === '.' || validationRegExp.test(appName ?? '')) {\n    return true;\n  } else {\n    return \"App name must consist of only lowercase alphanumeric characters, '-', and '_'\";\n  }\n};\n\nexport const parseNameAndPath = (input: string) => {\n  const paths = input.split('/');\n\n  let appName = paths[paths.length - 1];\n\n  if (appName === '.') {\n    const parsedCwd = resolve(process.cwd());\n    appName = basename(parsedCwd);\n  }\n\n  // If the first part is a @, it's a scoped package\n  const indexOfDelimiter = paths.findIndex(p => p.startsWith('@'));\n  if (indexOfDelimiter !== -1) {\n    appName = paths.slice(indexOfDelimiter).join('/');\n  }\n\n  const path = paths.filter(p => !p.startsWith('@')).join('/');\n\n  return [appName, path] as const;\n};\n","import { logger } from './gui.js';\nimport { CliOptions } from './userOptions.js';\nimport { getUserPkgManager } from './utils.js';\n\nexport const logNextSteps = (projectName: string, options: CliOptions) => {\n  const pkgManager = getUserPkgManager();\n  logger.info('Next steps:');\n  projectName !== '.' && logger.info(`  cd ${projectName}`);\n  options.noInstall &&\n    logger.info(`  ${pkgManager} ${pkgManager === 'yarn' ? '' : 'install'}`);\n  logger.info(`  ${pkgManager === 'npm' ? 'npx' : pkgManager} prisma db push`);\n  logger.info(`  ${pkgManager === 'npm' ? 'npm run' : pkgManager} dev`);\n};\n","import { Command } from 'commander';\nimport { Merge } from 'type-fest';\nimport inquirer from 'inquirer';\nimport asciify from 'asciify-image';\nimport { resolve } from 'path';\nimport { CREATE_V3_APP, DEFAULT_APP_NAME } from './constants.js';\nimport { getUserPkgManager, validateAppName } from './utils.js';\nimport { logger } from './gui.js';\n\nexport type CliOptions = {\n  name: string;\n  noGit: boolean;\n  noInstall: boolean;\n};\n\nconst defaults: CliOptions = {\n  name: DEFAULT_APP_NAME,\n  noGit: false,\n  noInstall: false\n};\n\nconst checkInteractive = async () => {\n  const isNonInteractive =\n    process.env.SHELL?.toLowerCase().includes('git') &&\n    process.env.SHELL?.includes('bash');\n\n  if (!isNonInteractive) {\n    return {\n      interactive: true,\n      shouldContinue: true\n    };\n  }\n\n  logger.warn(`WARNING: It looks like you are using Git Bash which is non-interactive. In order to provide options with the interactive CLI, please run create-v3t3-app with another\n      terminal.`);\n\n  const { shouldContinue } = await inquirer.prompt<{\n    shouldContinue: boolean;\n  }>({\n    name: 'shouldContinue',\n    type: 'confirm',\n    message: `Continue scaffolding a default V3 app?`,\n    default: true\n  });\n\n  return { interactive: false, shouldContinue };\n};\n\nconst getCliArgs = (): Merge<CliOptions, { name: string | undefined }> => {\n  const program = new Command().name(CREATE_V3_APP);\n  program\n    .description('A CLI for creating web applications with the v3 stack')\n    .argument(\n      '[dir]',\n      'The name of the application, as well as the name of the directory to create'\n    )\n    .option(\n      '--noGit',\n      'Explicitly tell the CLI to not initialize a new git repo in the project',\n      false\n    )\n    .option(\n      '--noInstall',\n      \"Explicitly tell the CLI to not run the package manager's install command\",\n      false\n    )\n    .parse(process.argv);\n\n  return program.opts();\n};\n\nconst promptAppName = async (): Promise<string> => {\n  const { name } = await inquirer.prompt<Pick<CliOptions, 'name'>>({\n    name: 'name',\n    type: 'input',\n    message: 'What will your project be called?',\n    default: defaults.name,\n    validate: validateAppName,\n    transformer: (input: string) => {\n      return input.trim();\n    }\n  });\n\n  return name;\n};\n\nconst promptGit = async (): Promise<boolean> => {\n  const { git } = await inquirer.prompt<{ git: boolean }>({\n    name: 'git',\n    type: 'confirm',\n    message: 'Initialize a new git repository?',\n    default: true\n  });\n\n  return git;\n};\n\nconst promptInstall = async (): Promise<boolean> => {\n  const pkgManager = getUserPkgManager();\n\n  const { install } = await inquirer.prompt<{ install: boolean }>({\n    name: 'install',\n    type: 'confirm',\n    message:\n      `Would you like us to run '${pkgManager}` +\n      (pkgManager === 'yarn' ? `'?` : ` install'?`),\n    default: true\n  });\n\n  return install;\n};\n\nconst runCli = async () => {\n  const cliArgs = getCliArgs();\n\n  const options = Object.assign(cliArgs, {\n    name: cliArgs.name || (await promptAppName()),\n    noGit: cliArgs.noGit || !(await promptGit()),\n    noInstall: cliArgs.noGit || !(await promptInstall())\n  });\n\n  return options;\n};\n\nconst promptTailwind = async () => {\n  const { language } = await inquirer.prompt<{ language: string }>({\n    name: 'language',\n    type: 'list',\n    message: 'Which styling solutions would you like to use ?',\n    choices: [\n      { name: 'Open Props', value: 'openprops', short: 'openprops' },\n      { name: 'Tailwind', value: 'tailwind', short: 'tailwind' }\n    ],\n    default: 'openprops'\n  });\n\n  if (language === 'tailwind') {\n    const duck = await asciify(resolve(process.cwd(), 'src/assets/duck.jpg'), {\n      fit: 'box',\n      width: 20,\n      height: 20\n    });\n    console.log(duck);\n    logger.info('Wrong choice KEKW');\n    logger.info(\n      \"Create V3 App believes in web fundamentals and doesn't support tailwind out of the box.\"\n    );\n    logger.info(\n      \"Don't worry, you can easily setup tailwind yourself by adding the tailwind nuxt module.\"\n    );\n  } else {\n    logger.success('Ah, I see you are a person of culture.');\n  }\n};\n\nexport const getUserOptions = async (): Promise<CliOptions> => {\n  const { shouldContinue, interactive } = await checkInteractive();\n  if (!shouldContinue) process.exit(0);\n\n  const options = interactive ? await runCli() : defaults;\n  await promptTailwind();\n\n  return options;\n};\n","import { createProject } from './createProject.js';\nimport { initializeGit } from './git.js';\nimport { logger, renderTitle } from './gui.js';\nimport { installDependencies } from './installDependencies.js';\nimport { logNextSteps } from './logNextSteps.js';\nimport { getUserOptions } from './userOptions.js';\nimport { parseNameAndPath } from './utils.js';\n\n(async function () {\n  renderTitle();\n  const options = await getUserOptions();\n  const [projectName, projectDir] = parseNameAndPath(options.name);\n  console.log(projectName, projectDir);\n\n  await createProject({ projectName, projectDir });\n\n  if (!options.noInstall) {\n    await installDependencies(projectDir);\n  }\n\n  if (!options.noGit) {\n    await initializeGit(projectDir);\n  }\n\n  logNextSteps(projectName as string, options);\n\n  process.exit(0);\n})().catch(err => {\n  logger.error('Aborting installation...');\n  if (err instanceof Error) {\n    logger.error(err);\n  } else {\n    logger.error(\n      'An unknown error has occurred. Please open an issue on github with the below:'\n    );\n    console.log(err);\n  }\n  process.exit(1);\n});\n"],"mappings":"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","names":["chalk","fs","inquirer","ora","path","fs","path","inquirer","ora","chalk","chalk","execa","ora","resolve","path","execa","ora","chalk","inquirer","resolve","inquirer","resolve"]}